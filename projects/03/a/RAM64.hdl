// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    RAM8(in=in, load=load0,address=address[0..2], out=outreg0);
    RAM8(in=in, load=load1,address=address[0..2], out=outreg1);
    RAM8(in=in, load=load2,address=address[0..2], out=outreg2);
    RAM8(in=in, load=load3,address=address[0..2], out=outreg3);
    RAM8(in=in, load=load4,address=address[0..2], out=outreg4);
    RAM8(in=in, load=load5,address=address[0..2], out=outreg5);
    RAM8(in=in, load=load6,address=address[0..2], out=outreg6);
    RAM8(in=in, load=load7,address=address[0..2], out=outreg7);
    DMux8Way(in=load, sel=address[3..5], a=load0, b=load1,c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
    Mux8Way16(a=outreg0,b=outreg1,c=outreg2,d=outreg3,e=outreg4,f=outreg5,g=outreg6, h=outreg7, sel=address[3..5], out=out);
    }
